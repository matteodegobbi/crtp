
;; Function getchar (null)
;; enabled by -tree-original


{
  return getc (stdin);
}


;; Function fgetc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ ;
}


;; Function putchar (null)
;; enabled by -tree-original


{
  return putc (__c, stdout);
}


;; Function fputc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (*stdout->_IO_write_ptr++  = (char) __c);
}


;; Function feof_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 16) != 0;
}


;; Function ferror_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 32) != 0;
}


;; Function sprintf (null)
;; enabled by -tree-original


{
  return __builtin___sprintf_chk ((char *) __s, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsprintf_chk ((char *) __s, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function snprintf (null)
;; enabled by -tree-original


{
  return __builtin___snprintf_chk ((char *) __s, __n, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsnprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsnprintf_chk ((char *) __s, __n, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function fprintf (null)
;; enabled by -tree-original


{
  return __fprintf_chk ((struct FILE *) __stream, 2, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function printf (null)
;; enabled by -tree-original


{
  return __printf_chk (2, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk (stdout, 2, (const char *) __fmt, __ap);
}


;; Function vfprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk ((struct FILE *) __stream, 2, (const char *) __fmt, __ap);
}


;; Function dprintf (null)
;; enabled by -tree-original


{
  return __dprintf_chk (__fd, 2, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vdprintf (null)
;; enabled by -tree-original


{
  return __vdprintf_chk (__fd, 2, (const char *) __fmt, __ap);
}


;; Function fgets (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __s, 1);

    size_t sz = __builtin_dynamic_object_size ((const void *) __s, 1);
  if (__builtin_constant_p (sz) != 0 && sz == 18446744073709551615 || ((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n <= (long unsigned int) sz)
    {
      return __fgets_alias ((char *) __s, __n, (struct FILE *) __stream);
    }
  if (((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n > (long unsigned int) sz)
    {
      return __fgets_chk_warn ((char *) __s, sz, __n, (struct FILE *) __stream);
    }
  return __fgets_chk ((char *) __s, sz, __n, (struct FILE *) __stream);
}


;; Function fread (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz) != 0 && sz == 18446744073709551615 || __builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      return __fread_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function fread_unlocked (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz) != 0 && sz == 18446744073709551615 || __builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      if (((__builtin_constant_p (__size) != 0 && __builtin_constant_p (__n) != 0) && (__size | __n) <= 4294967295) && __size * __n <= 8)
        {
          {
            size_t __cnt = __size * __n;
            char * __cptr = (char *) __ptr;

                        size_t __cnt = __size * __n;
                        char * __cptr = (char *) __ptr;
            if (__cnt == 0)
              {
                return 0;
              }
            goto <D.5026>;
            <D.5025>:;
            {
              int __c = getc_unlocked ((struct FILE *) __stream);

                            int __c = getc_unlocked ((struct FILE *) __stream);
              if (__c == -1)
                {
                  goto <D.5023>;
                }
              *__cptr++  = (char) __c;
            }
             --__cnt;
            <D.5026>:;
            if (__cnt != 0) goto <D.5025>; else goto <D.5023>;
            <D.5023>:;
            return (size_t) ((long unsigned int) (__cptr - (char *) __ptr) / (long unsigned int) __size);
          }
        }
      return __fread_unlocked_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_unlocked_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_unlocked_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function atoi (null)
;; enabled by -tree-original


{
  return (int) strtol (__nptr, 0B, 10);
}


;; Function atol (null)
;; enabled by -tree-original


{
  return strtol (__nptr, 0B, 10);
}


;; Function atoll (null)
;; enabled by -tree-original


{
  return strtoll (__nptr, 0B, 10);
}


;; Function __bswap_16 (null)
;; enabled by -tree-original


{
  return (__uint16_t) __builtin_bswap16 (__bsx);
}


;; Function __bswap_32 (null)
;; enabled by -tree-original


{
  return (__uint32_t) __builtin_bswap32 (__bsx);
}


;; Function __bswap_64 (null)
;; enabled by -tree-original


{
  return (__uint64_t) __builtin_bswap64 (__bsx);
}


;; Function __uint16_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function __uint32_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function __uint64_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function bsearch (null)
;; enabled by -tree-original


{
  size_t __l;
  size_t __u;
  size_t __idx;
  const void * __p;
  int __comparison;

    size_t __l;
    size_t __u;
    size_t __idx;
    const void * __p;
    int __comparison;
  __l = 0;
  __u = __nmemb;
  goto <D.5474>;
  <D.5475>:;
  __idx = (__l + __u) / 2;
  __p = __base + (sizetype) (__idx * __size);
  __comparison = __compar (__key, __p);
  if (__comparison < 0)
    {
      __u = __idx;
    }
  else
    {
      if (__comparison > 0)
        {
          __l = __idx + 1;
        }
      else
        {
          return (void *) __p;
        }
    }
  <D.5474>:;
  if (__l < __u) goto <D.5475>; else goto <D.5473>;
  <D.5473>:;
  return 0B;
}


;; Function atof (null)
;; enabled by -tree-original


{
  return strtod (__nptr, 0B);
}


;; Function realpath (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __resolved, 1);

    size_t sz = __builtin_dynamic_object_size ((const void *) __resolved, 1);
  if (sz == 18446744073709551615)
    {
      return __realpath_alias ((const char *) __name, (char *) __resolved);
    }
  return __realpath_chk ((const char *) __name, (char *) __resolved, sz);
}


;; Function ptsname_r (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __buf, 1)) != 0 && __builtin_dynamic_object_size ((const void *) __buf, 1) == 18446744073709551615 || __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __buf, 1) >= (long unsigned int) __buflen) != 0 && __builtin_dynamic_object_size ((const void *) __buf, 1) >= (long unsigned int) __buflen ? __ptsname_r_alias (__fd, __buf, __buflen) : __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __buf, 1) >= (long unsigned int) __buflen) != 0 && __builtin_dynamic_object_size ((const void *) __buf, 1) < (long unsigned int) __buflen ? __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_dynamic_object_size ((const void *) __buf, 1)) : __ptsname_r_chk (__fd, __buf, __buflen, __builtin_dynamic_object_size ((const void *) __buf, 1));
}


;; Function wctomb (null)
;; enabled by -tree-original


{
  if (__builtin_dynamic_object_size ((const void *) __s, 1) != 18446744073709551615 && __builtin_dynamic_object_size ((const void *) __s, 1) <= 15)
    {
      return __wctomb_chk (__s, __wchar, __builtin_dynamic_object_size ((const void *) __s, 1));
    }
  return __wctomb_alias (__s, __wchar);
}


;; Function mbstowcs (null)
;; enabled by -tree-original


{
  if (__builtin_constant_p ((wchar_t *) __dst == 0B) != 0 && (wchar_t *) __dst == 0B)
    {
      return __mbstowcs_nulldst ((wchar_t *) __dst, (const char *) __src, __len);
    }
  else
    {
      return __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __dst, 1)) != 0 && __builtin_dynamic_object_size ((const void *) __dst, 1) == 18446744073709551615 || __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __dst, 1) / 4 >= (long unsigned int) __len) != 0 && __builtin_dynamic_object_size ((const void *) __dst, 1) / 4 >= (long unsigned int) __len ? __mbstowcs_alias ((wchar_t *) __dst, (const char *) __src, __len) : __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __dst, 1) / 4 >= (long unsigned int) __len) != 0 && __builtin_dynamic_object_size ((const void *) __dst, 1) / 4 < (long unsigned int) __len ? __mbstowcs_chk_warn ((wchar_t *) __dst, (const char *) __src, __len, __builtin_dynamic_object_size ((const void *) __dst, 1) / 4) : __mbstowcs_chk ((wchar_t *) __dst, (const char *) __src, __len, __builtin_dynamic_object_size ((const void *) __dst, 1) / 4);
    }
}


;; Function wcstombs (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __dst, 1)) != 0 && __builtin_dynamic_object_size ((const void *) __dst, 1) == 18446744073709551615 || __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __dst, 1) >= (long unsigned int) __len) != 0 && __builtin_dynamic_object_size ((const void *) __dst, 1) >= (long unsigned int) __len ? __wcstombs_alias ((char *) __dst, (const wchar_t *) __src, __len) : __builtin_constant_p (__builtin_dynamic_object_size ((const void *) __dst, 1) >= (long unsigned int) __len) != 0 && __builtin_dynamic_object_size ((const void *) __dst, 1) < (long unsigned int) __len ? __wcstombs_chk_warn ((char *) __dst, (const wchar_t *) __src, __len, __builtin_dynamic_object_size ((const void *) __dst, 1)) : __wcstombs_chk ((char *) __dst, (const wchar_t *) __src, __len, __builtin_dynamic_object_size ((const void *) __dst, 1));
}


;; Function print_log (null)
;; enabled by -tree-original


{
  if (err_level < log_level)
    {
      return;
    }
  else
    {
      switch ((int) err_level)
        {
          case 1:;
          printf ((const char * restrict) "[FATAL ERROR] ");
          goto <D.5683>;
          case 2:;
          printf ((const char * restrict) "[ERROR] ");
          goto <D.5683>;
          case 3:;
          printf ((const char * restrict) "[WARNING] ");
          goto <D.5683>;
          case 4:;
          printf ((const char * restrict) "[DEBUG] ");
          goto <D.5683>;
          case 5:;
          default:;
          printf ((const char * restrict) "[INFO] ");
          goto <D.5683>;
          <D.5683>:;
        }
    }
  vprintf (format, args);
}


;; Function log_fatal (null)
;; enabled by -tree-original


{
  struct va_list args;

    struct va_list args;
  __builtin_va_start ((struct  &) (struct  *) &args, msg);
  print_log (msg, 1, args);
  __builtin_va_end ((struct  &) (struct  *) &args);
}


;; Function log_error (null)
;; enabled by -tree-original


{
  struct va_list args;

    struct va_list args;
  __builtin_va_start ((struct  &) (struct  *) &args, msg);
  print_log (msg, 2, args);
  __builtin_va_end ((struct  &) (struct  *) &args);
}


;; Function log_warning (null)
;; enabled by -tree-original


{
  struct va_list args;

    struct va_list args;
  __builtin_va_start ((struct  &) (struct  *) &args, msg);
  print_log (msg, 3, args);
  __builtin_va_end ((struct  &) (struct  *) &args);
}


;; Function log_debug (null)
;; enabled by -tree-original


{
  struct va_list args;

    struct va_list args;
  __builtin_va_start ((struct  &) (struct  *) &args, msg);
  print_log (msg, 4, args);
  __builtin_va_end ((struct  &) (struct  *) &args);
}


;; Function log_info (null)
;; enabled by -tree-original


{
  struct va_list args;

    struct va_list args;
  __builtin_va_start ((struct  &) (struct  *) &args, msg);
  print_log (msg, 5, args);
  __builtin_va_end ((struct  &) (struct  *) &args);
}


;; Function ackermann (null)
;; enabled by -tree-original


{
  if (m == 0)
    {
      return n + 1;
    }
  else
    {
      if (n == 0)
        {
          return ackermann (m + -1, 1);
        }
      else
        {
          return ackermann (m + -1, ackermann (m, n + -1));
        }
    }
}


;; Function main (null)
;; enabled by -tree-original


{
  int n = atoi ((const char *) *(argv + 8));
  int count = 0;
  int total = 0;
  int multiplied = 0;

  if (argc <= 1)
    {
      log_error ((const char *) "usage: %s n\n", *argv);
      exit (1);
    }
    int n = atoi ((const char *) *(argv + 8));
    int count = 0;
    int total = 0;
    int multiplied = 0;
  goto <D.5719>;
  <D.5720>:;
  {
    int d1 = ackermann (n, 1);
    int d2 = ackermann (n, count);

    count = count + 1;
    multiplied = multiplied * count;
    if (multiplied <= 99)
      {
        log_info ((const char *) "count: %d\n", count);
      }
    SAVE_EXPR <ackermann (2, 2)>;, total = SAVE_EXPR <ackermann (2, 2)> + total;;
    SAVE_EXPR <ackermann (multiplied, n)>;, total = SAVE_EXPR <ackermann (multiplied, n)> + total;;
        int d1 = ackermann (n, 1);
    total = d1 * multiplied + total;
        int d2 = ackermann (n, count);
    if (((unsigned int) count & 1) == 0)
      {
        total = total + d2;
      }
  }
  <D.5719>:;
  if (count < n) goto <D.5720>; else goto <D.5718>;
  <D.5718>:;
  return total;
}
return 0;

